{"version":3,"sources":["components/Tabs.tsx","App.tsx","index.tsx"],"names":["tabs","id","title","content","Tabs","tabId","useParams","selectedTab","find","tab","className","map","classNames","to","navLinkActive","isActive","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"kPAGMA,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAO,WAClB,IAAQC,EAAUC,cAAVD,MACFE,EAAcP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOI,CAAf,IAEjC,OACE,qCACE,oBAAIK,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAAAF,GAAG,OACX,oBAEE,UAAQ,MACRC,UAAWE,IAAW,CAAE,YAAaP,IAAUI,EAAIR,KAHrD,SAKE,cAAC,IAAD,CAAMY,GAAE,aAAQJ,EAAIR,IAApB,SACGQ,EAAIP,SALFO,EAAIR,GAFA,QAcjB,qBAAKS,UAAU,QAAQ,UAAQ,aAA/B,UACc,OAAXH,QAAW,IAAXA,OAAA,EAAAA,EAAaJ,UAAW,0BAIhC,EC7BKW,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACpBH,IAAW,cAAe,CAAE,YAAaG,GADrB,EAITC,EAAM,kBACjB,qCACE,qBACEN,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASG,GAAG,IAAIH,UAAWI,EAA3B,kBACA,cAAC,IAAD,CAASD,GAAG,QAAQH,UAAWI,EAA/B,yBAKN,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,KAAK,IAAIC,QAAS,oBAAIR,UAAU,QAAd,8BACzB,cAAC,IAAD,CAAOO,KAAK,IAAIC,QAAS,oBAAIR,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOO,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUL,GAAG,QACzC,cAAC,IAAD,CAAOI,KAAK,OAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,UAAUC,QAAS,cAAC,EAAD,iBArBxB,ECTnBC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.c5416cbe.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const Tabs = () => {\n  const { tabId } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames({ 'is-active': tabId === tab.id })}\n            >\n              <Link to={`../${tab.id}`}>\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content || 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tabs } from './components/Tabs';\n\nconst navLinkActive = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', { 'is-active': isActive })\n);\n\nexport const App = () => (\n  <>\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={navLinkActive}>Home</NavLink>\n          <NavLink to=\"/tabs\" className={navLinkActive}>Tabs</NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"tabs\">\n            <Route path=\":tabId?\" element={<Tabs />} />\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}